{"version":3,"sources":["components/Question.js","routes/StartTest.js","routes/Home.js","components/Navigation.js","routes/Login.js","routes/Plan.js","routes/UserScore.js","functions/ProtectedRoute.js","functions/authService.js","routes/UserScorePerson.js","routes/UserTestQuestion.js","routes/CreateTest.js","routes/Retest.js","routes/CreateUser.js","App.js","index.js"],"names":["Question","handleChange","event","props","onChange","index","Form","Group","as","Row","controlId","this","question_num","Label","column","sm","question","Col","Control","type","placeholder","name","required","isCorrect","React","Component","StartTest","history","useHistory","useState","questions","setQuestions","myAnswers","setMyAnswers","answers","setAnswers","setIsCorrect","questionNum","setQuestionNum","isMeaning","setIsMeaning","originalQuestion","setOriginalQuestion","questionsSentence","setQuestionsSentence","myAnswersSentence","setMyAnswersSentence","answersSentence","setAnswersSentence","isCorrectSentence","setIsCorrectSentence","questionNumSentence","setQuestionNumSentence","isMeaningSentence","setIsMeaningSentence","originalQuestionSentence","setOriginalQuestionSentence","showSubmitButtonVocab","setShowSubmitButtonVocab","showSubmitButtonSentence","setShowSubmitButtonSentence","showVocabTest","setShowVocabTest","vocabButtonText","setVocabButtonText","showSentenceTest","setShowSentenceTest","sentenceButtonText","setSentenceButtonText","userLevel","localStorage","getItem","token","useEffect","axios","get","headers","Authorization","then","result","data","length","console","log","localQuestions","localAnswers","localQuestionNum","localIsMeanig","entries","i","answer","submitVocabAnswers","a","preventDefault","checkVocabAnswers","range","testType","retest","post","submitSentenceAnswers","checkSentenceAnswers","tmpIsCorrect","correctAnswer","myAnswer","target","value","handleSentenceChange","Container","Button","onClick","variant","onSubmit","Dropdown","Toggle","id","Menu","map","Item","color","size","push","Home","retests","setRetests","today","Date","String","getDate","padStart","getMonth","getFullYear","getRetest","className","fluid","md","span","offset","appUser","Table","striped","bordered","hover","idx","testDate","pathname","state","Navigation","roles","Navbar","collapseOnSelect","expand","style","backgroundColor","Brand","Link","to","alt","src","aria-controls","Collapse","Nav","NavDropdown","title","clear","setAppToken","setAppUser","Login","username","setUsername","password","setPassword","errorMessage","setErrorMessage","accessToken","setItem","level","fontSize","Plan","setTestType","setLevel","setTestDate","from","setFrom","setTo","questionType","setQuestionType","e","UserScore","users","setUsers","searchTerm","setSearchTerm","searchCategory","setSearchCategory","FormControl","placecholder","ListGroup","filter","user","toLowerCase","includes","ProtectedRoute","path","component","render","rest","jwtDecoded","current_time","now","jwt_decode","err","exp","isAuthenticated","UserScorePerson","location","exam","setExam","quiz","Card","isRetest","Header","date","Body","Text","isPass","UserTestQuestion","examQuestions","examQuestion","sentenceResponses","questionAnswer","setQuestionAnswer","questionsOrSentence","split","reverse","average","CreateTest","useForm","register","handleSubmit","xlsx","require","buttonState","setButtonState","reader","FileReader","onload","evt","bstr","wb","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","patch","readAsBinaryString","Retest","splitRange","url","localIsMeaning","submitAnswers","CreateUser","watch","formState","errors","alert","levels","item","App","setToken","setUser","appToken","exact","defaults","baseURL","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.739214d8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row } from \"react-bootstrap\";\n\nclass Question extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event, this.props.index);\n  };\n  render() {\n    return (\n      <Form.Group as={Row} controlId={this.props.question_num}>\n        <Form.Label column sm={2}>\n          {this.props.question_num}. {this.props.question}\n        </Form.Label>\n        <Col sm={5}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"answer -> 모르면 x 적기\"\n            onChange={this.handleChange}\n            name={this.props.question_num}\n            required\n          />\n        </Col>\n        <Col sm={2}>\n          {this.props.isCorrect ? <h1>{this.props.isCorrect}</h1> : null}\n        </Col>\n      </Form.Group>\n    );\n  }\n}\n\n// function Question({ id, level, question_num, question, answer, handleChange }) {\n//   return (\n//     <Form.Group as={Row} controlId={question_num}>\n//       <Form.Label column sm={2}>\n//         {question_num}. {question}\n//       </Form.Label>\n//       <Col sm={10}>\n//         <Form.Control type=\"text\" placeholder=\"answer\" />\n//       </Col>\n//     </Form.Group>\n//   );\n// }\n\n// Question.propTypes = {\n//   id: PropTypes.string,\n//   level: PropTypes.string,\n//   question_num: PropTypes.number.isRequired,\n//   question: PropTypes.string.isRequired,\n//   answer: PropTypes.string.isRequired,\n// };\n\nexport default Question;\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Question from '../components/Question'\nimport {Form, Container, Button, Dropdown} from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\nfunction StartTest() {\n    const history = useHistory()\n\n    // init state\n    // states for Vocab Test\n    const [questions, setQuestions] = useState([]) // set either english or Korean\n    const [myAnswers, setMyAnswers] = useState([]) // user's answers\n    const [answers, setAnswers] = useState([])\n    const [isCorrect, setIsCorrect] = useState([]) // isCorrect ? true : false\n    const [questionNum, setQuestionNum] = useState([]) // Question number for each\n    const [isMeaning, setIsMeaning] = useState([]) // isMeaning ? true : false\n    const [originalQuestion, setOriginalQuestion] = useState([])\n\n    // states for Sentence Test\n    const [questionsSentence, setQuestionsSentence] = useState([]) // set either english or Korean\n    const [myAnswersSentence, setMyAnswersSentence] = useState([]) // user's answers\n    const [answersSentence, setAnswersSentence] = useState([])\n    const [isCorrectSentence, setIsCorrectSentence] = useState([]) // isCorrect ? true : false\n    const [questionNumSentence, setQuestionNumSentence] = useState([]) // Question number for each\n    const [isMeaningSentence, setIsMeaningSentence] = useState([]) // isMeaning ? true : false\n    const [originalQuestionSentence, setOriginalQuestionSentence] = useState([])\n\n    // shows submit button at first and when submitted, hide submit button and show home page button\n    const [showSubmitButtonVocab, setShowSubmitButtonVocab] = useState(true)\n    const [showSubmitButtonSentence, setShowSubmitButtonSentence] = useState(true)\n\n    // show and hide vocab test section\n    const [showVocabTest, setShowVocabTest] = useState(false)\n    const [vocabButtonText, setVocabButtonText] = useState('Start Vocab Test')\n\n    // show and hide sentence test seciton\n    const [showSentenceTest, setShowSentenceTest] = useState(false)\n    const [sentenceButtonText, setSentenceButtonText] = useState(\n        'Start Sentence Test',\n    )\n\n    // Get value from local storage\n    const userLevel = localStorage.getItem('level')\n    const token = localStorage.getItem('token')\n\n    useEffect(() => {\n        // request to get today's vocab question\n        axios\n            .get(`questions/todayQuestions?testType=word`, {\n                headers: {Authorization: `Bearer ${token}`},\n            })\n            .then((result) => {\n                // check if test exists\n                if (result.data.length === 0) {\n                    setShowSubmitButtonVocab(false)\n                    return\n                }\n                console.log(result.data);\n                setOriginalQuestion(result.data)\n                let localQuestions = []\n                let localAnswers = []\n                let localQuestionNum = []\n                let localIsMeanig = []\n\n                for (let [i, question] of result.data.entries()) {\n                    localQuestions[i] = question.question\n                    localAnswers[i] = question.answer\n                    localQuestionNum[i] = question.question_num\n                    localIsMeanig[i] = question.isMeaning\n                }\n                setQuestions(localQuestions)\n                setAnswers(localAnswers)\n                setQuestionNum(localQuestionNum)\n                setIsMeaning(localIsMeanig)\n            })\n\n        // request to get today's sentence questions\n        axios\n            .get(`sentence/todayQuestions?testType=sentence`, {\n                headers: {Authorization: `Bearer ${token}`},\n            })\n            .then((result) => {\n                // check if test exists\n                if (result.data.length === 0) {\n                    setShowSubmitButtonSentence(false)\n                    return\n                }\n                setOriginalQuestionSentence(result.data)\n                let localQuestions = []\n                let localAnswers = []\n                let localQuestionNum = []\n                let localIsMeanig = []\n\n                for (let [i, question] of result.data.entries()) {\n                    localQuestions[i] = question.question\n                    localAnswers[i] = question.answer\n                    localQuestionNum[i] = question.question_num\n                    localIsMeanig[i] = question.isMeaning\n                }\n                setQuestionsSentence(localQuestions)\n                setAnswersSentence(localAnswers)\n                setQuestionNumSentence(localQuestionNum)\n                setIsMeaningSentence(localIsMeanig)\n            })\n    }, [])\n\n    const submitVocabAnswers = async (event) => {\n        event.preventDefault()\n        checkVocabAnswers()\n\n        let range =\n            userLevel +\n            '_' +\n            questionNum[0] +\n            '_' +\n            questionNum[questionNum.length - 1]\n\n        let data = {\n            testType: 'word',\n            question_num: questionNum,\n            questions,\n            range: range,\n            answer: answers,\n            myAnswers,\n            isMeaning,\n            retest: false\n        }\n        // let data = { answers: myAnswers, level: userLevel, dateTime };\n        await axios.post('response', data, {\n            headers: {Authorization: `Bearer ${token}`},\n        })\n\n        setShowSubmitButtonVocab(false)\n    }\n\n    const submitSentenceAnswers = async (event) => {\n        event.preventDefault()\n        checkSentenceAnswers()\n\n        let range =\n            userLevel +\n            '_' +\n            questionNumSentence[0] +\n            '_' +\n            questionNumSentence[questionNumSentence.length - 1]\n\n        let data = {\n            testType: 'sentence',\n            question_num: questionNumSentence,\n            questions: questionsSentence,\n            range: range,\n            answer: answersSentence,\n            myAnswers: myAnswersSentence,\n            isMeaning: isMeaningSentence,\n            retest: false\n        }\n        await axios.post('response', data, {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n        })\n\n        setShowSubmitButtonSentence(false)\n    }\n\n    /**\n     * TODO - Answer Check Algorithm\n     * Algorithm for checking if answer is correct\n     * [THINK about handling it in the backend]\n     * NEED TO FIX\n     */\n    const checkVocabAnswers = () => {\n        let tmpIsCorrect = []\n        for (let i in answers) {\n            let correctAnswer = answers[i]\n            let myAnswer = myAnswers[i]\n\n            tmpIsCorrect[i] = correctAnswer === myAnswer ? 'correct' : 'wrong'\n        }\n        setIsCorrect(tmpIsCorrect)\n        // https://en.wikipedia.org/wiki/Levenshtein_distance\n    }\n\n    const checkSentenceAnswers = () => {\n        let tmpIsCorrect = []\n        for (let i in answersSentence) {\n            let correctAnswer = answersSentence[i]\n            let myAnswer = myAnswersSentence[i]\n\n            tmpIsCorrect[i] = correctAnswer === myAnswer ? 'correct' : 'wrong'\n        }\n        setIsCorrectSentence(tmpIsCorrect)\n        // https://en.wikipedia.org/wiki/Levenshtein_distance\n    }\n\n    const handleChange = (event, index) => {\n        let localAnswers = [...myAnswers]\n        // CHECK -> later if I want to send data to backend to check , uncomment below and add data values\n        // localAnswers[index] = {\n        //   question_num: +event.target.name,\n        //   answer: event.target.value,\n        // };\n        localAnswers[index] = event.target.value\n        setMyAnswers(localAnswers)\n    }\n\n    const handleSentenceChange = (event, index) => {\n        let localAnswers = [...myAnswersSentence]\n        // CHECK -> later if I want to send data to backend to check , uncomment below and add data values\n        // localAnswers[index] = {\n        //   question_num: +event.target.name,\n        //   answer: event.target.value,\n        // };\n        localAnswers[index] = event.target.value\n        setMyAnswersSentence(localAnswers)\n    }\n\n    /**\n     * Show and hide vocab test section on button press\n     */\n    const toggleVocabTest = () => {\n        if (showVocabTest) {\n            setShowVocabTest(false)\n            setVocabButtonText('Start Vocab Test')\n        } else {\n            setShowVocabTest(true)\n            setVocabButtonText('Hide Vocab Test')\n        }\n    }\n\n    /**\n     * Show and hide sentence test section on button press\n     */\n    const toggleSentenceTest = () => {\n        if (showSentenceTest) {\n            setShowSentenceTest(false)\n            setSentenceButtonText('Start Sentence Test')\n        } else {\n            setShowSentenceTest(true)\n            setSentenceButtonText('Hide Sentence Test')\n        }\n    }\n\n    return (\n        <Container>\n            <Button onClick={toggleVocabTest} variant=\"warning\">\n                {vocabButtonText}\n            </Button>\n            <Button onClick={toggleSentenceTest} variant=\"info\">\n                {sentenceButtonText}\n            </Button>\n            {showVocabTest ? (\n                <form onSubmit={submitVocabAnswers}>\n                    <Form.Group>\n                        <h1>Today's Vocab Test</h1>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                Word Bank\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                {answers.map((answer, i) => (\n                                    <Dropdown.Item key={i}>{answer}</Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        {originalQuestion.map((question, i) => (\n                            <Question\n                                key={question.id}\n                                question_num={question.question_num}\n                                question={question.question}\n                                onChange={handleChange}\n                                isCorrect={isCorrect[i]}\n                                index={i}\n                            />\n                        ))}\n                    </Form.Group>\n                    {showSubmitButtonVocab ? (\n                        <Button name=\"wordBtn\" type=\"submit\" color=\"primary\" size=\"lg\">\n                            Submit\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={(event) => history.push('/')}\n                            size=\"lg\"\n                            color=\"success\"\n                            variant=\"success\"\n                        >\n                            Home Page\n                        </Button>\n                    )}\n                </form>\n            ) : null}\n            {showSentenceTest ? (\n                <form onSubmit={submitSentenceAnswers}>\n                    <Form.Group>\n                        <h1>Today's Sentence Test</h1>\n                        {originalQuestionSentence.map((question, i) => (\n                            <Question\n                                key={question.id}\n                                question_num={question.question_num}\n                                question={question.question}\n                                onChange={handleSentenceChange}\n                                isCorrect={isCorrectSentence[i]}\n                                index={i}\n                            />\n                        ))}\n                    </Form.Group>\n                    {showSubmitButtonSentence ? (\n                        <Button name=\"sentenceBtn\" type=\"submit\" color=\"primary\" size=\"lg\">\n                            Submit\n                        </Button>\n                    ) : (\n                        <Button\n                            onClick={(event) => history.push('/')}\n                            size=\"lg\"\n                            color=\"success\"\n                            variant=\"success\"\n                        >\n                            Home Page\n                        </Button>\n                    )}\n                </form>\n            ) : null}\n        </Container>\n    )\n}\n\nexport default StartTest\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport {Container, Row, Col} from 'react-bootstrap'\nimport {Table} from 'react-bootstrap'\nimport {useHistory} from \"react-router-dom\";\n\nfunction Home(props) {\n    const history = useHistory();\n    const [retests, setRetests] = useState([]);\n\n    const userLevel = localStorage.getItem('level')\n    const token = localStorage.getItem('token')\n\n    // GET today's date\n    const today = new Date()\n    const dd = String(today.getDate()).padStart(2, '0')\n    const mm = String(today.getMonth() + 1).padStart(2, '0')\n    const yyyy = today.getFullYear()\n    const testDate = yyyy + '-' + mm + '-' + dd\n\n    useEffect(() => {\n        async function getRetest() {\n            try {\n                if (token) {\n                    const retest = await axios.get('retests', {\n                        headers: {Authorization: `Bearer ${token}`},\n                    })\n                    setRetests(retest.data);\n                }\n            } catch (err) {\n                setRetests([]);\n            }\n        }\n\n        getRetest()\n    }, []);\n\n\n    return (\n        <Container className=\"mt-4\" fluid>\n\n            <Row>\n                <Col md={{span: 4, offset: 4}}>\n                    <h1>Welcome {props.appUser}!</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={{span: 2, offset: 0}}>\n                    <h3>My Retests</h3>\n                </Col>\n            </Row>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Test Date</th>\n                    <th>Test Range</th>\n                    <th>Test Type</th>\n                    <th>Start Retest</th>\n                </tr>\n                </thead>\n                <tbody>\n                {retests.map((retest, idx) => {\n                    return !retest ? null : (\n                        <tr key={idx}>\n                            <td>{idx + 1}</td>\n                            <td>{retest.testDate}</td>\n                            <td>{retest.range}</td>\n                            <td>{retest.testType}</td>\n                            <td>\n                                <button onClick={() => history.push({\n                                    pathname: '/retests',\n                                    state: {range: retest.range, testType: retest.testType}\n                                })}>Take Retest\n                                </button>\n                            </td>\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\n\nfunction Navigation(props) {\n  const history = useHistory()\n\n  /*// instead of handling token and user here, handled in App.js so that Login component \n  // and Navbar components can both get access\n   const [token, setToken] = useState(localStorage.getItem(\"token\"));\n   const [user, setUser] = useState(localStorage.getItem(\"name\")); */\n\n  const logout = () => {\n    localStorage.clear()\n    props.setAppToken('')\n    props.setAppUser('')\n    history.push('/')\n  }\n  const roles = localStorage.getItem('roles')\n  return (\n    <div>\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        variant=\"light\"\n        style={{ backgroundColor: '#848484' }}\n      >\n        <Navbar.Brand as={Link} to=\"/\">\n          <img\n            alt=\"\"\n            src=\"/eie_logo.png\"\n            // width=\"30\"\n            // height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{' '}\n          {/* Academy App */}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link> */}\n            {roles === 'user' || roles === 'admin' ? (\n              <Nav.Link as={Link} to=\"/startTest\">\n                Test\n              </Nav.Link>\n            ) : null}\n            {roles === 'admin' && props.appUser !== '' ? (\n              <Nav.Link as={Link} to=\"/createPlan\">\n                Create Plan\n              </Nav.Link>\n            ) : null}\n            {roles === 'user' || roles === 'admin' ? (\n              <Nav.Link as={Link} to=\"/createTest\">\n                Create Test\n              </Nav.Link>\n            ) : null}\n            {roles === 'admin' && props.appUser !== '' ? (\n              <Nav.Link as={Link} to=\"/user-scores\">\n                Find User Score\n              </Nav.Link>\n            ) : null}\n            {roles === 'admin' && props.appUser !== '' ? (\n              <Nav.Link as={Link} to=\"/users\">\n                Create New User\n              </Nav.Link>\n            ) : null}\n          </Nav>\n          <Nav className=\"ms-auto\">\n            {!props.appUser ? (\n              <Nav.Link as={Link} to=\"/signin\">\n                Login\n              </Nav.Link>\n            ) : (\n              <Nav>\n                <NavDropdown title={props.appUser}>\n                  <NavDropdown.Item onClick={logout}>Logout</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default Navigation\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction Login(props) {\n  const history = useHistory()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // useEffect(() => {\n  //   props.setAppToken(\"\");\n  // }, []);\n\n  const usernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const passwordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    const data = {\n      username,\n      password,\n    }\n\n    try {\n      const accessToken = await axios.post('auth/signin', data)\n      localStorage.setItem('token', accessToken.data.accessToken)\n      localStorage.setItem('name', accessToken.data.name)\n      localStorage.setItem('roles', accessToken.data.roles)\n      localStorage.setItem('level', accessToken.data.level)\n      // to change navbar from login -> username (handled in App.js)\n      props.setAppUser(accessToken.data.name)\n      history.push('/')\n    } catch (error) {\n      // failed login\n      setErrorMessage('Login failed. Please check your id or password')\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          required\n          onChange={usernameChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          required\n          onChange={passwordChange}\n        />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      <div style={{ fontSize: 20, color: 'red' }}>{errorMessage}</div>\n    </div>\n  )\n}\n\nexport default Login\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction Plan() {\n  const history = useHistory()\n\n  const [testType, setTestType] = useState('')\n  const [level, setLevel] = useState('')\n  const [testDate, setTestDate] = useState('')\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [questionType, setQuestionType] = useState('')\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    // const data = {\n    //     testType: this.testType,\n    //     level: this.level,\n    //     testDate: this.date,\n    //     from: this.from,\n    //     to: this.to,\n    //     questionType: this.questionType,\n    // }\n    const data = { testType, level, testDate, from, to, questionType }\n\n    try {\n      const token = localStorage.getItem('token')\n      await axios.post('plan/createPlan', data, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"level\">\n        <Form.Label>Test Type</Form.Label>\n        <br />\n        <select onChange={(e) => setTestType(e.target.value)} required>\n          <option>Select Test Type...</option>\n          <option value=\"word\">Word Questions</option>\n          <option value=\"sentence\">Sentence Questions</option>\n        </select>\n      </Form.Group>\n      <Form.Group controlId=\"level\">\n        <Form.Label>Level</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter Level\"\n          onChange={(e) => setLevel(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"testDate\">\n        <Form.Label>Test Date</Form.Label>\n        <Form.Control\n          type=\"date\"\n          onChange={(e) => setTestDate(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"from\">\n        <Form.Label>From</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"From: \"\n          onChange={(e) => setFrom(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"to\">\n        <Form.Label>To</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"To: \"\n          onChange={(e) => setTo(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"questionType\">\n        <Form.Label>Question Type</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"mixed | word | meaning \"\n          onChange={(e) => setQuestionType(e.target.value)}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  )\n}\n\nexport default Plan\n","/**\n * Page to get user score by admin\n */\n\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  Container,\n  Form,\n  FormControl,\n  ListGroup,\n  Row,\n  Col,\n} from 'react-bootstrap'\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom'\nimport axios from 'axios'\n\nfunction UserScore() {\n  const history = useHistory()\n\n  // define states\n  const [users, setUsers] = useState([])\n  const [username, setUsername] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searchCategory, setSearchCategory] = useState('')\n\n  // get data from backend\n  useEffect(() => {\n    // make post request to /getUserScore\n    const token = localStorage.getItem('token')\n    axios\n      .get('auth/users', {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((result) => {\n        setUsers(result.data)\n        // let localUsernames = [];\n        // let localNames = [];\n        // for (let [i, user] of result.data.entries()) {\n        //   localUsernames[i] = user.username;\n        //   localNames[i] = user.name;\n        // }\n        // setUsers(localNames);\n        // setUsername(localUsernames);\n      })\n  }, [])\n\n  const handleChange = (event) => {}\n\n  const search = async (event) => {\n    event.preventDefault()\n  }\n\n  // First show a search bar and the whole user list below\n  // admin can click on the user name to see the user's exam scores\n  return (\n    <Container className=\"mt-4\" fluid>\n      <Row>\n        <Col md={{ span: 2, offset: 4 }}>\n          <FormControl\n            as=\"select\"\n            onChange={(event) => {\n              setSearchCategory(event.target.value)\n            }}\n          >\n            <option value=\"studentName\">Name</option>\n            <option value=\"userName\">Username</option>\n            <option value=\"userLevel\">Level</option>\n          </FormControl>\n        </Col>\n        <Col md={{ span: 4, offset: 0 }}>\n          <FormControl\n            placecholder=\"Search...\"\n            onChange={(event) => {\n              setSearchTerm(event.target.value)\n            }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 4 }}>\n          <ListGroup className=\"mt-2\">\n            {users\n              .filter((user) => {\n                if (searchTerm == '') {\n                  return user\n                } else if (\n                  searchCategory === 'studentName' &&\n                  user.name.toLowerCase().includes(searchTerm.toLowerCase())\n                ) {\n                  return user\n                } else if (\n                  searchCategory === 'userName' &&\n                  user.username.toLowerCase().includes(searchTerm.toLowerCase())\n                ) {\n                  return user\n                } else if (\n                  searchCategory === 'userLevel' &&\n                  user.level.toLowerCase().includes(searchTerm.toLowerCase())\n                ) {\n                  return user\n                }\n              })\n              .map((user, idx) => {\n                return (\n                  <ListGroup.Item\n                    key={idx}\n                    as=\"button\"\n                    variant=\"success\"\n                    style={{ color: 'black' }}\n                    onClick={(event) => {\n                      history.push({\n                        pathname: '/user-scores/person',\n                        state: { user: user },\n                      })\n                    }}\n                  >\n                    {user.name} - {user.username} - {user.level}\n                  </ListGroup.Item>\n                )\n              })}\n          </ListGroup>\n        </Col>\n      </Row>\n\n      {/* {username.map((user, index) => {\n        return <div key={index}>{user}</div>;\n      })} */}\n    </Container>\n  )\n}\n\nexport default UserScore\n","import React, {useEffect} from \"react\";\nimport {Route, Redirect, useHistory} from \"react-router-dom\";\nimport isAuthenticated from \"./authService\";\n\nexport const ProtectedRoute = ({\n                                   path,\n                                   component: Component,\n                                   render,\n                                   setAppToken,\n                                   setAppUser,\n                                   ...rest\n                               }) => {\n    //   const history = useHistory();\n    //  const [token, setToken] = useState(\"\");\n    //  const [user, setUser] = useState(\"\");\n\n    /*\n      useEffect(() => {\n        // setAppToken(\"\");\n        // setAppUser(appUser);\n      }, []);\n\n     */\n\n    return (\n        <Route\n            path={path}\n            {...rest}\n            render={(props) => {\n                if (isAuthenticated()) {\n                    return Component ? <Component {...props} /> : render(props);\n                } else {\n                    // this results in error because setting state in the rendering process\n                    //   return history.push(\"/signin\");\n                    // before clearing local storage, set values to null\n                    setAppUser(null);\n                    setAppToken(null);\n                    localStorage.clear();\n                    return <Redirect to=\"/signin\"/>;\n                }\n            }}\n        />\n    );\n};\n\nexport default ProtectedRoute;\n","import jwt_decode from \"jwt-decode\";\n\nexport default function isAuthenticated() {\n  var current_time = Date.now() / 1000;\n  var token = localStorage.getItem(\"token\");\n  var jwtDecoded;\n  try {\n    jwtDecoded = jwt_decode(token);\n  } catch (err) {\n    return false;\n  }\n  if (jwtDecoded.exp < current_time) {\n    // expired\n    return false;\n  }\n  return true;\n}\n","import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction UserScorePerson(props) {\n  const history = useHistory()\n\n  const user = props.location.state.user\n  const [exam, setExam] = useState([])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    axios\n      .post(\n        'exams/user-scores',\n        { username: user.username },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        },\n      )\n      .then((result) => {\n        setExam(result.data)\n      })\n  }, [])\n\n  return (\n    <Container className=\"mt-4\" fluid>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <h1>{user.name}'s Exam Result Page</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          {exam.map((quiz, idx) => {\n            return (\n              <Card key={idx}>\n                {quiz.isRetest ? (\n                  <Card.Header as=\"h5\">\n                    {quiz.date} <span style={{ color: 'red' }}>(RE-TEST)</span>\n                  </Card.Header>\n                ) : (\n                  <Card.Header as=\"h5\">{quiz.date}</Card.Header>\n                )}\n                <Card.Body>\n                  <Card.Text>Level: {quiz.level}</Card.Text>\n                  <Card.Text>Range: {quiz.range}</Card.Text>\n                  <Card.Text>\n                    Pass or Fail :{' '}\n                    {quiz.isPass ? (\n                      <span style={{ color: 'green' }}>Pass</span>\n                    ) : (\n                      <span style={{ color: 'red' }}>Fail</span>\n                    )}\n                  </Card.Text>\n                  <Button\n                    variant=\"info\"\n                    onClick={(event) => {\n                      // go to question detail page\n                      history.push({\n                        pathname: '/user-scores/person/questions',\n                        state: { exam: exam[idx], user: user },\n                      })\n                    }}\n                  >\n                    See Detail\n                  </Button>\n                </Card.Body>\n              </Card>\n            )\n          })}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default UserScorePerson\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Container, Card, Row, Col, ListGroup } from 'react-bootstrap'\n\nfunction UserTestQuestion(props) {\n  const exam = props.location.state.exam\n  const user = props.location.state.user\n  // array of objects containing student's answers for each question (word || sentence)\n  // setting it depending on the type of test\n  let examQuestions\n  exam.testType === 'word'\n    ? (examQuestions = exam.examQuestion)\n    : (examQuestions = exam.sentenceResponses)\n\n  const [questionAnswer, setQuestionAnswer] = useState([])\n\n  useEffect(() => {\n    const range = exam.range.split('_') // level_from_to\n    const level = exam.level\n    const from = range[1]\n    const to = range[2]\n    const testType = exam.testType\n    const token = localStorage.getItem('token')\n    let questionsOrSentence\n\n    testType === 'word'\n      ? (questionsOrSentence = 'questions')\n      : (questionsOrSentence = 'sentence')\n\n    axios\n      .get(\n        `${questionsOrSentence}?level=${level}&from=${from}&to=${to}&testType=${testType}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        },\n      )\n      .then((result) => {\n        setQuestionAnswer(result.data.reverse())\n      })\n  }, [])\n\n  return (\n    <Container className=\"mt-4\" fluid>\n      <Row>\n        <Col md={{ span: 6, offset: 4 }}>\n          <h1>\n            {user.name}'s {exam.date} exam\n          </h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 4 }}>\n          <h2>Exam Average: {exam.average}%</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 4 }}>\n          <ListGroup className=\"mt-2\">\n            {questionAnswer.map((answer, idx) => {\n              return !answer ? null : (\n                <Card key={idx}>\n                  {examQuestions[idx].isCorrect ? (\n                    <Card.Header as=\"h3\" style={{ color: 'green' }}>\n                      {examQuestions[idx].question_num}\n                    </Card.Header>\n                  ) : (\n                    <Card.Header as=\"h3\" style={{ color: 'red' }}>\n                      {examQuestions[idx].question_num}\n                    </Card.Header>\n                  )}\n                  <Card.Body>\n                    <Card.Text>\n                      Question:\n                      {examQuestions[idx].isMeaning\n                        ? answer.question\n                        : answer.answer}\n                    </Card.Text>\n                    <Card.Text>\n                      Answer:\n                      {examQuestions[idx].isMeaning\n                        ? answer.answer\n                        : answer.question}\n                    </Card.Text>\n                    <Card.Text>\n                      Student's Answer:\n                      {examQuestions[idx].answer}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              )\n            })}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default UserTestQuestion\n","import { useHistory } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Form, Button, Container } from 'react-bootstrap'\nimport axios from 'axios'\n\nfunction CreateTest() {\n  const history = useHistory()\n  const { register, handleSubmit } = useForm()\n  const xlsx = require('xlsx')\n  const token = localStorage.getItem('token')\n\n  // init states\n  // for create test button: create word || create sentence || update word || update sentence\n  const [buttonState, setButtonState] = useState('create word')\n\n  /**\n   *\n   * @param {*} data - contains parsed input fields and uses name attribute to create object fields\n   */\n  const onSubmit = (data) => {\n    const reader = new FileReader()\n    const level = data.level\n    reader.onload = async (evt) => {\n      const bstr = evt.target.result\n      const wb = xlsx.read(bstr, { type: 'binary' })\n      const wsname = wb.SheetNames[0]\n      const ws = wb.Sheets[wsname]\n      const data = xlsx.utils.sheet_to_json(ws, { header: 1 })\n      try {\n        if (buttonState === 'create word') {\n          await axios.post(\n            'questions',\n            { data, level },\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            },\n          )\n        } else if (buttonState === 'create sentence') {\n          await axios.post(\n            'sentence',\n            { data, level },\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            },\n          )\n        } else if (buttonState === 'update word') {\n          await axios.patch(\n            'questions',\n            { data, level },\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            },\n          )\n        } else {\n          await axios.patch(\n            'sentence',\n            { data, level },\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            },\n          )\n        }\n        history.push('/')\n      } catch (err) {\n        history.push('/')\n        console.log(err)\n      }\n    }\n    reader.readAsBinaryString(data.exam[0])\n    // const result = excelToJson({ sourceFile: data.exam[0] })\n  }\n\n  return (\n    // <Form onSubmit={this.onSubmit}>\n    <Container className=\"mt-4\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          {/* <select {...register('type', {required: true})}>\n                        <option>Select Level</option>\n                        <option value=\"word\">Word Questions</option>\n                        <option value=\"sentence\">Sentence Questions</option>\n                    </select> */}\n          <Form.Control\n            type=\"text\"\n            {...register('level', { required: true })}\n            placeholder=\"Enter Level\"\n          />\n          <Form.Control\n            {...register('exam', { required: true })}\n            type=\"file\"\n            size=\"lg\"\n            // onChange={(e) => (this.level = e.target.value)}\n          />\n        </Form.Group>\n        <Button\n          variant=\"success\"\n          type=\"submit\"\n          onClick={(e) => setButtonState('create word')}\n        >\n          Create Word\n        </Button>\n        <Button\n          variant=\"success\"\n          type=\"submit\"\n          onClick={(e) => setButtonState('create sentence')}\n        >\n          Create Sentence\n        </Button>\n        <Button\n          variant=\"success\"\n          type=\"submit\"\n          onClick={(e) => setButtonState('update word')}\n        >\n          Update Word\n        </Button>\n        <Button\n          variant=\"success\"\n          type=\"submit\"\n          onClick={(e) => setButtonState('update sentence')}\n        >\n          Update Sentence\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default CreateTest\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Button, Container} from \"react-bootstrap\";\nimport Question from \"../components/Question\";\n\nfunction Retest(props) {\n    // init history\n    const history = useHistory();\n\n    // get props from history (from Home.js)\n    const range = props.location.state.range;\n    const testType = props.location.state.testType;\n\n    // split range to get level, from, to\n    const splitRange = range.split('_');\n    const level = splitRange[0];\n    const from = splitRange[1];\n    const to = splitRange[2];\n\n\n    // construct url\n    const url = 'retests/questions?range=' + range + '&testType=' + testType\n\n    // init states\n    const [questions, setQuestions] = useState([]);\n    const [myAnswers, setMyAnswers] = useState([]);\n    const [answers, setAnswers] = useState([]);\n    const [questionNum, setQuestionNum] = useState([]);\n    const [isMeaning, setIsMeaning] = useState([]);\n\n    // get value from local storage\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        axios.get(url, {headers: {Authorization: `Bearer ${token}`}})\n            .then(result => {\n                // check if retest questions exist\n                if (result.data.length === 0) {\n                    console.log(\"Empty data passed\");\n                }\n                setQuestions(result.data);\n\n                let localAnswers = []\n                let localQuestionNum = []\n                let localIsMeaning = []\n\n                for (let [i, question] of result.data.entries()) {\n                    localAnswers[i] = question.answer\n                    localQuestionNum[i] = question.question_num\n                    localIsMeaning[i] = question.isMeaning\n                }\n                setAnswers(localAnswers)\n                setQuestionNum(localQuestionNum)\n                setIsMeaning(localIsMeaning)\n            })\n    }, [])\n\n\n    const  submitAnswers = async (event) => {\n        event.preventDefault()\n\n        let data = {\n            testType,\n            question_num: questionNum,\n            questions,\n            range: range,\n            answer: answers,\n            myAnswers,\n            isMeaning,\n            retest: true\n        }\n\n        await axios.post('response', data, {\n            headers: {Authorization: `Bearer ${token}`},\n        })\n        history.push('/')\n    }\n\n    const handleChange = (event, index) => {\n        let localAnswers = [...myAnswers]\n        localAnswers[index] = event.target.value\n        setMyAnswers(localAnswers);\n    }\n\n    return (\n        <Container>\n            <h1>Re-Test</h1>\n            <h3>Level: {level} </h3>\n            <h3>Range: {from} - {to}</h3>\n            <h3>Test Type: {testType}</h3>\n            <form onSubmit={submitAnswers}>\n                {questions.map((question, i) => (\n                    <Question\n                        key={question.id}\n                        question_num={question.question_num}\n                        question={question.question}\n                        onChange={handleChange}\n                        index={i}\n                    />\n                ))}\n                <Button type=\"submit\" color=\"primary\" size=\"lg\">\n                    Submit Re-Test\n                </Button>\n            </form>\n        </Container>\n    );\n}\n\nexport default Retest","import {useHistory} from \"react-router-dom\";\nimport {Button, Container, Form} from \"react-bootstrap\";\nimport React from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport levels from \"../files/levels.json\";\nimport axios from \"axios\";\n\nexport default function CreateUser() {\n    // get history\n    const history = useHistory();\n\n    // react-hook-form setup\n    const {register, handleSubmit, watch, formState: {errors}} = useForm();\n\n    // init all states\n\n    const onSubmit = async (data) => {\n\n        try {\n            const token = localStorage.getItem('token')\n            await axios.post('auth/signUp', data, {\n                headers: {Authorization: `Bearer ${token}`},\n            })\n            history.push(\"/\");\n        } catch (error) {\n            alert(\"Create User Failed\");\n        }\n    }\n\n    return (\n        <Container className=\"mt-4\">\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"username\" {...register(\"username\", {required: true})} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"password\" {...register(\"password\", {required: true})} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"name\" {...register(\"name\", {required: true})} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Level</Form.Label>\n                    <Form.Control as=\"select\" {...register(\"level\")}>\n                        {levels.levels.map((item, idx) => {\n                            return <option key={idx}>{item}</option>\n                        })}\n                    </Form.Control>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    );\n\n}","import React, { useState } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport StartTest from './routes/StartTest'\nimport Home from './routes/Home'\nimport Navigation from './components/Navigation'\nimport Login from './routes/Login'\nimport Plan from './routes/Plan'\nimport UserScore from './routes/UserScore'\nimport ProtectedRoute from './functions/ProtectedRoute'\nimport UserScorePerson from './routes/UserScorePerson'\nimport UserTestQuestion from './routes/UserTestQuestion'\nimport CreateTest from './routes/CreateTest'\nimport Retest from \"./routes/Retest\";\nimport CreateUser from \"./routes/CreateUser\";\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'))\n  const [user, setUser] = useState(localStorage.getItem('name'))\n\n  return (\n    <BrowserRouter>\n      <Navigation\n        appToken={token}\n        setAppToken={setToken}\n        appUser={user}\n        setAppUser={setUser}\n      />\n      <Switch>\n        <Route exact path=\"/startTest\" component={StartTest} />\n        <Route exact path=\"/signin\">\n          <Login setAppUser={setUser} />\n        </Route>\n        <ProtectedRoute\n          exact\n          path=\"/createPlan\"\n          component={Plan}\n          setAppToken={setToken}\n          setAppUser={setUser}\n          appUser={user}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/user-scores/person\"\n          component={UserScorePerson}\n          setAppToken={setToken}\n          setAppUser={setUser}\n        />\n        <ProtectedRoute\n            path=\"/retests\"\n            component={Retest}\n            setAppToken={setToken}\n            setAppUser={setUser}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/user-scores/person/questions\"\n          component={UserTestQuestion}\n          setAppToken={setToken}\n          setAppUser={setUser}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/user-scores\"\n          component={UserScore}\n          setAppToken={setToken}\n          setAppUser={setUser}\n          appUser={user}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/users\"\n          component={CreateUser}\n          setAppToken={setToken}\n          setAppUser={setUser}\n        />\n        <Route\n          exact\n          path=\"/createTest\"\n          component={CreateTest}\n          setAppToken={setToken}\n          setAppUser={setUser}\n          appUser={user}\n        />\n        {/* <Route exact path=\"/createPlan\" component={Plan} /> */}\n        <Route path=\"/\" exact={true}>\n          <Home appUser={user} setAppToken={setToken} setAppUser={setUser} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"http://localhost:4000\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}